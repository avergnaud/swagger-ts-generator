/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

import { fromLabelleEnum, fromNameLabels } from 'shared/utils/enum'

{{#enumTypeCollection}}
const {{type}} = fromNameLabels([
{{#valuesAndLabels}}
    ["{{value}}","{{label}}"],
{{/valuesAndLabels}}
])

{{/enumTypeCollection}}


export const TypeRendezVous = fromLabelleEnum(typeRendezVousValues)
export type TypeRendezVous = keyof typeof TypeRendezVous

{{#if generateClasses}}
/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

{{#enumTypeCollection}}
    {{type}} = {{type}};
{{/enumTypeCollection}}
}
{{/if}}
